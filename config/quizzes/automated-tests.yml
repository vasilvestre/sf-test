category: Automated tests
questions:
    -
        question: 'In PHPUnit, which methods are conventionally used for setting up and tearing down the test environment for each test method?'
        answers:
            - {value: setUp(): void and tearDown(): void, correct: true}
            - {value: __construct() and __destruct(), correct: false}
            - {value: startTest() and endTest(), correct: false}
            - {value: initialize() and finalize(), correct: false}
    -
        question: 'How do you create a test double (mock) for a class without calling its original constructor in PHPUnit?'
        answers:
            - {value: '$this->createMock(MyClass::class)', correct: true}
            - {value: '$this->getMockBuilder(MyClass::class)->disableOriginalConstructor()->getMock()', correct: true}
            - {value: '$this->createTestProxy(MyClass::class, [/* constructor args */])', correct: false}
            - {value: '$this->createStub(MyClass::class, false)', correct: false}
    -
        question: 'Which class is provided by Symfony to facilitate testing console commands?'
        answers:
            - {value: Symfony\Component\Console\Tester\CommandTester', correct: true}
            - {value: Symfony\Bundle\FrameworkBundle\Test\ConsoleCommandTester', correct: false}
            - {value: Symfony\Component\Console\Test\CommandTestHelper', correct: false}
            - {value: Symfony\Component\Console\Command\CommandTester', correct: false}
    -
        question: 'In PHPUnit, how do you configure a mock to return different values on consecutive calls?'
        answers:
            - {value: '$mock->method(''someMethod'')->willReturnOnConsecutiveCalls(''first'', ''second'');', correct: true}
            - {value: '$mock->method(''someMethod'')->will($this->onConsecutiveCalls(''first'', ''second''));', correct: false}
            - {value: '$mock->expects($this->exactly(2))->method(''someMethod'')->willReturn(''first'', ''second'');', correct: false}
            - {value: '$mock->method(''someMethod'')->willReturnMap([ [1, ''first''], [2, ''second''] ]);', correct: false}
    -
        question: 'In modern PHPUnit, what is the correct method to assert that a specific exception is thrown?'
        answers:
            - {value: '$this->expectException(MyException::class);', correct: true}
            - {value: '$this->setExpectedException(MyException::class);', correct: false}
            - {value: '@expectedException MyException', correct: false}
            - {value: '$this->assertThrows(MyException::class, function() { /* code */ });', correct: false}
    -
        question: 'What is the standard command to run your application''s test suite using the PHPUnit bridge?'
        answers:
            - {value: 'bin/phpunit', correct: true}
            - {value: 'vendor/bin/phpunit', correct: false}
            - {value: 'phpunit -c phpunit.xml.dist', correct: false}
            - {value: 'symfony test', correct: false}
    -
        question: 'In a modern Symfony application, where are functional tests typically located?'
        answers:
            - {value: 'tests/Controller/', correct: true}
            - {value: 'tests/Functional/', correct: false}
            - {value: 'src/Tests/Controller/', correct: false}
            - {value: 'app/tests/', correct: false}
    -
        question: 'When using `Symfony\Bundle\FrameworkBundle\Test\WebTestCase`, which method gives you access to the test client?'
        answers:
            - {value: 'static::createClient()', correct: true}
            - {value: '$this->getContainer()->get(''test.client'')', correct: false}
            - {value: 'new Client()', correct: false}
            - {value: '$this->client', correct: false}
    -
        question: 'How can you prevent email delivery during tests when using Symfony Mailer?'
        answers:
            - {value: 'Configure the MAILER_DSN environment variable to "null://"', correct: true}
            - {value: 'Set `symfony.mailer.disable_delivery: true` in config/packages/test/mailer.yaml', correct: false}
            - {value: 'Use `static::getContainer()->get(''mailer'')->stop()
`', correct: false}
            - {value: 'The test client automatically disables mailers.', correct: false}
    -
        question: 'After making a request with the test client, how do you instruct it to follow any redirects?'
        answers:
            - {value: '$client->followRedirect();', correct: true}
            - {value: 'The client automatically follows redirects by default.', correct: false}
            - {value: '$crawler = $client->followRedirects();', correct: false}
            - {value: 'You must manually get the redirect location from the header and make a new request.', correct: false}
    -
        question: 'Which Symfony component is specifically designed for end-to-end browser testing?'
        answers:
            - {value: 'Panther', correct: true}
            - {value: 'BrowserKit', correct: false}
            - {value: 'DomCrawler', correct: false}
            - {value: 'HttpClient', correct: false}
