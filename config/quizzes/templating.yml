category: Templating
questions:
    -
        question: 'Using Twig, how do you render flash messages of a specific type (e.g., "success")?'
        answers:
            - {value: "{% for message in app.flashes('success') %} {{ message }} {% endfor %}", correct: true}
            - {value: "{{ app.session.flashbag.get('success') }}", correct: false}
            - {value: "{% for message in app.session.flashbag('success') %} {{ message }} {% endfor %}", correct: false}
            - {value: "{{ flashes('success') }}", correct: false}
    -
        question: 'Using Twig, how do you render a text string in uppercase?'
        answers:
            - {value: "{{ 'my string'|upper }}", correct: true}
            - {value: "{{ 'my string'|uppercase }}", correct: false}
            - {value: "{{ 'my string'|capitalize }}", correct: false}
            - {value: "{{ upper('my string') }}", correct: false}
    -
        question: 'Using Twig, how do you declare a variable in a template?'
        answers:
            - {value: "{% set myVariable = 'example' %}", correct: true}
            - {value: "{{ var myVariable = 'example' }}", correct: false}
            - {value: "{% var myVariable = 'example' %}", correct: false}
            - {value: "{{ set myVariable = 'example' }}", correct: false}
    -
        question: 'In a Twig extension class, which method is used to define new functions?'
        answers:
            - {value: 'getFunctions()', correct: true}
            - {value: 'getFilters()', correct: false}
            - {value: 'getOperators()', correct: false}
            - {value: 'getTests()', correct: false}
    -
        question: 'Using Twig, which comparison operator checks if a value is present in a sequence (array or string)?'
        answers:
            - {value: 'in', correct: true}
            - {value: 'contains', correct: false}
            - {value: 'matches', correct: false}
            - {value: 'is in', correct: false}
    -
        question: 'What is the correct Twig syntax for executing statements like loops or conditionals?'
        answers:
            - {value: '{% ... %}', correct: true}
            - {value: '{{ ... }}', correct: false}
            - {value: '{# ... #}', correct: false}
            - {value: '(( ... ))', correct: false}
    -
        question: 'Using Twig, how do you check if the current user has a specific role, like "ROLE_ADMIN"?'
        answers:
            - {value: "{% if is_granted('ROLE_ADMIN') %}", correct: true}
            - {value: "{% if app.user.hasRole('ROLE_ADMIN') %}", correct: false}
            - {value: "{% if has_role('ROLE_ADMIN') %}", correct: false}
            - {value: "{% if user_is('ROLE_ADMIN') %}", correct: false}
    -
        question: 'Which Twig expression correctly accesses the username of the currently authenticated user?'
        answers:
            - {value: '{{ app.user.userIdentifier }}', correct: true}
            - {value: '{{ app.user.username }}', correct: false}
            - {value: '{{ app.user.name }}', correct: false}
            - {value: '{{ user.username }}', correct: false}
    -
        question: 'How do you render another controller''s content from within a Twig template?'
        answers:
            - {value: '{{ render(controller(''App\\Controller\\MyController::someAction'')) }}', correct: true}
            - {value: '{{ include(controller(''...'')) }}', correct: false}
            - {value: '{% render ''App\\Controller\\MyController::someAction'' %}', correct: false}
            - {value: '{{ controller(''App\\Controller\\MyController::someAction'') }}', correct: false}
    -
        question: 'What is the purpose of the `spaceless` tag in Twig?'
        answers:
            - {value: 'To remove whitespace between HTML tags, but not whitespace within a tag or in plain text.', correct: true}
            - {value: 'To remove all whitespace, including newlines and spaces in text.', correct: false}
            - {value: 'To minify the entire HTML output.', correct: false}
            - {value: 'To make the template ignore all spaces.', correct: false}
    -
        question: 'Which Twig function generates a relative URL for a given route?'
        answers:
            - {value: 'path()', correct: true}
            - {value: 'url()', correct: false}
            - {value: 'route()', correct: false}
            - {value: 'link()', correct: false}
    -
        question: 'What is the correct syntax for printing the content of a variable in Twig?'
        answers:
            - {value: '{{ my_variable }}', correct: true}
            - {value: '{% print my_variable %}', correct: false}
            - {value: '{# my_variable #}', correct: false}
            - {value: '(( my_variable ))', correct: false}
    -
        question: 'What is the correct syntax for adding comments in a Twig template?'
        answers:
            - {value: '{# This is a comment #}', correct: true}
            - {value: '<!-- This is a comment -->', correct: false}
            - {value: '// This is a comment', correct: false}
            - {value: '{% comment %}This is a comment{% endcomment %}', correct: false}
    -
        question: 'What is the `verbatim` tag used for?'
        answers:
            - {value: 'To prevent a block of code from being parsed by Twig, treating it as raw text.', correct: true}
            - {value: 'To mark a section for translation.', correct: false}
            - {value: 'To output a variable without escaping it.', correct: false}
            - {value: 'To define a reusable block of template code.', correct: false}
    -
        question: 'How do you include the contents of another template into the current one?'
        answers:
            - {value: '{% include ''partials/header.html.twig'' %}', correct: true}
            - {value: '{% import ''partials/header.html.twig'' %}', correct: false}
            - {value: '{{ include(''partials/header.html.twig'') }}', correct: false}
            - {value: '{% use ''partials/header.html.twig'' %}', correct: false}
    -
        question: 'What is the difference between the `include` function and the `embed` tag?'
        answers:
            - {value: '`embed` allows you to include another template while also overriding blocks defined within it.', correct: true}
            - {value: '`include` is for including entire templates, while `embed` is for including small snippets.', correct: false}
            - {value: '`embed` is deprecated in favor of `include`.', correct: false}
            - {value: 'There is no functional difference.', correct: false}
    -
        question: 'How can you create a link to a specific asset (e.g., a CSS file) in your template?'
        answers:
            - {value: 'Using the `asset()` function: <link rel="stylesheet" href="{{ asset(''styles/app.css'') }}">', correct: true}
            - {value: 'By hardcoding the relative path: <link rel="stylesheet" href="/styles/app.css">', correct: false}
            - {value: 'Using the `path()` function: <link rel="stylesheet" href="{{ path(''styles/app.css'') }}">', correct: false}
            - {value: 'Using the `asset_url()` function: <link rel="stylesheet" href="{{ asset_url(''styles/app.css'') }}">', correct: false}
    -
        question: 'What does the `|raw` filter do?'
        answers:
            - {value: 'It outputs the variable''s value without any automatic HTML escaping.', correct: true}
            - {value: 'It converts the variable to a raw binary string.', correct: false}
            - {value: 'It marks the variable as raw text to be processed later.', correct: false}
            - {value: 'It is used for raw database queries.', correct: false}
    -
        question: 'How do you define a reusable block of content in a base template that child templates can override?'
        answers:
            - {value: 'Using the `block` tag: {% block my_block %}{% endblock %}', correct: true}
            - {value: 'Using the `template` tag: {% template my_template %}{% endtemplate %}', correct: false}
            - {value: 'Using the `define` tag: {% define my_section %}{% enddefine %}', correct: false}
            - {value: 'Using the `section` tag: {% section my_section %}{% endsection %}', correct: false}
    -
        question: 'How does a child template inherit from a base template?'
        answers:
            - {value: 'Using the `extends` tag at the beginning of the file: {% extends ''base.html.twig'' %}', correct: true}
            - {value: 'Using the `inherits` tag: {% inherits ''base.html.twig'' %}', correct: false}
            - {value: 'Using the `parent` function: {{ parent(''base.html.twig'') }}', correct: false}
            - {value: 'By naming the file `child_of_base.html.twig`.', correct: false}
