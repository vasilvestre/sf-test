category: Web Features
questions:
    -
        question: 'In Symfony, how do you get the client''s IP address from the `Request` object?'
        answers:
            - {value: '$request->getClientIp()', correct: true}
            - {value: '$request->ip()', correct: false}
            - {value: '$_SERVER[''REMOTE_ADDR'']', correct: false}
            - {value: '$request->getClient()->getIp()', correct: false}
    -
        question: 'How do you access the session object from a controller that extends `AbstractController`?'
        answers:
            - {value: 'By type-hinting `SessionInterface $session` in the action method.', correct: true}
            - {value: 'By calling `$this->get(''session'')`.', correct: false}
            - {value: 'By calling `$request->getSession()`.', correct: true}
            - {value: 'By using `$this->container->get(''session'')`.', correct: false}
    -
        question: 'How do you add a "flash" message to the session?'
        answers:
            - {value: '$this->addFlash(''success'', ''Your changes were saved!'');', correct: true}
            - {value: '$request->getSession()->getFlashBag()->add(''success'', ''Message'');', correct: true}
            - {value: '$session->flash(''success'', ''Message'');', correct: false}
            - {value: '$this->setFlash(''success'', ''Message'');', correct: false}
    -
        question: 'How do you create and send a cookie with a `Response`?'
        answers:
            - {value: 'Create a `Cookie` object and add it to the `Response` headers.', correct: true}
            - {value: 'Call `$response->withCookie(new Cookie(...))`.', correct: false}
            - {value: 'Use the native `setcookie()` function.', correct: false}
            - {value: 'Set the cookie directly in the `$response->headers` array.', correct: false}
    -
        question: 'Which method on the `Request` object checks if the request method is POST?'
        answers:
            - {value: '$request->isMethod(''POST'')', correct: true}
            - {value: '$request->getMethod() === ''POST''', correct: true}
            - {value: '$request->isPostRequest()', correct: false}
            - {value: '$_SERVER[''REQUEST_METHOD''] === ''POST''', correct: false}
    -
        question: 'What is the purpose of the `UploadedFile` class in the HttpFoundation component?'
        answers:
            - {value: 'To represent a file uploaded through a form and provide methods for moving it.', correct: true}
            - {value: 'To handle file downloads.', correct: false}
            - {value: 'To create temporary files on the server.', correct: false}
            - {value: 'To validate file uploads based on MIME type.', correct: false}
    -
        question: 'How do you get the value of a request header (e.g., `User-Agent`)?'
        answers:
            - {value: '$request->headers->get(''User-Agent'')', correct: true}
            - {value: '$request->getHeader(''User-Agent'')', correct: false}
            - {value: '$_SERVER[''HTTP_USER_AGENT'']', correct: false}
            - {value: '$request->get(''User-Agent'')', correct: false}
    -
        question: 'What is the recommended way to create a `JsonResponse` in a controller?'
        answers:
            - {value: 'Use the `$this->json()` helper method.', correct: true}
            - {value: 'Create a new `JsonResponse` object manually.', correct: true}
            - {value: 'Return a `Response` object with a JSON string and the correct `Content-Type` header.', correct: false}
            - {value: 'Use `json_encode()` and return the result.', correct: false}
    -
        question: 'How do you create a response that forces a file download?'
        answers:
            - {value: 'Return a `BinaryFileResponse` object.', correct: true}
            - {value: 'Set the `Content-Disposition` header to `attachment`.', correct: true}
            - {value: 'Use the `$this->file()` helper method in a controller.', correct: true}
            - {value: 'Return a `StreamedResponse` with the file contents.', correct: false}
    -
        question: 'What does `$request->getSchemeAndHttpHost()` return?'
        answers:
            - {value: 'The scheme and host (e.g., "https://example.com").', correct: true}
            - {value: 'The full URL including the path.', correct: false}
            - {value: 'Only the host (e.g., "example.com").', correct: false}
            - {value: 'Only the scheme (e.g., "https").', correct: false}
