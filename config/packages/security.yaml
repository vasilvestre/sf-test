security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\User\Infrastructure\Security\SecurityUser: 'auto'
    
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        user_provider:
            id: App\User\Infrastructure\Security\UserProvider
    
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: user_provider
            form_login:
                login_path: auth_login
                check_path: auth_login
                default_target_path: app_quiz_index
                always_use_default_target_path: false
                enable_csrf: true
            logout:
                path: auth_logout
                target: auth_login
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week
                path: /
                always_remember_me: false

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/auth, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: ROLE_STUDENT }
        - { path: ^/quiz, roles: ROLE_STUDENT }

    role_hierarchy:
        ROLE_INSTRUCTOR: ROLE_STUDENT
        ROLE_ADMIN: [ROLE_INSTRUCTOR, ROLE_STUDENT]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_INSTRUCTOR, ROLE_STUDENT]

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
